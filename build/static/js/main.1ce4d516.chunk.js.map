{"version":3,"sources":["providers/MoralisDappProvider/context.js","providers/MoralisDappProvider/MoralisDappProvider.js","helpers/formatters.js","components/Blockie.jsx","components/Address/Address.jsx","helpers/networks.js","components/Account.jsx","components/Poll.jsx","components/Polls.js","components/Main.jsx","App.jsx","index.js"],"names":["MoralisDappContext","React","createContext","MoralisDappProvider","children","useMoralis","web3","Moralis","user","useState","walletAddress","setWalletAddress","chainId","setChainId","contractABI","setContractABI","contractAddress","setContractAddress","selectedCategory","setSelectedCategory","useEffect","onChainChanged","chain","onAccountsChanged","address","givenProvider","selectedAddress","get","Provider","value","useMoralisDapp","context","useContext","undefined","Error","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","currency","getEllipsisTxt","str","n","substr","length","Blockie","props","currentWallet","seed","toLowerCase","className","styles","height","display","gap","backgroundColor","borderRadius","alignItems","Address","setAddress","isClicked","setIsClicked","Copy","xmlns","width","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","cursor","onClick","navigator","clipboard","writeText","d","id","avatar","size","copyable","Check","networkConfigs","currencySymbol","blockExplorerUrl","wrapped","chainName","currencyName","rpcUrl","getExplorer","account","padding","justifyContent","text","color","Account","authenticate","isAuthenticated","logout","isModalVisible","setIsModalVisible","marginRight","scale","visible","footer","onCancel","bodyStyle","fontSize","fontWeight","marginTop","href","target","rel","SelectOutlined","type","signingMessage","Poll","question","answers","onVote","voted","voteReady","totalVotes","setTotalVotes","_totalVotes","reduce","total","current","parseInt","votes","console","log","map","answer","margin","option","saved_account","pollQuestion","option_voted","voter","poll_title","poll_options","Polls","more","access","setReg","setVoted","isInitialized","useNativeBalance","balance","getBalance","data","nativeToken","isLoading","useNewMoralisObject","isSaving","error","save","object","pollAnswers","setPollAnswers","isInitialMount","useRef","updatePoll","a","PollData","Object","extend","query","Query","equalTo","first","poll","pAnswers","attributes","options","_voted","checkReg","_access","handleVote","voteAnswer","asyncVoteRes","poll_data","title","set","Main","queryCategories","useMoralisQuery","fetchedCategories","JSON","parse","stringify","fontFamily","maxWidth","Header","Layout","content","header","position","zIndex","background","borderBottom","boxShadow","headerRight","Logo","App","isServerInfo","isWeb3Enabled","enableWeb3","isWeb3EnableLoading","overflow","path","to","APP_ID","process","SERVER_URL","Application","appId","serverUrl","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ce4d516.chunk.js","sourcesContent":["import React from \"react\";\n\nconst MoralisDappContext = React.createContext();\n\nexport default MoralisDappContext;\n","import React, { useEffect, useState } from \"react\";\nimport { useMoralis } from \"react-moralis\";\nimport MoralisDappContext from \"./context\";\n\nfunction MoralisDappProvider({ children }) {\n  const { web3, Moralis, user } = useMoralis();\n  const [walletAddress, setWalletAddress] = useState();\n  const [chainId, setChainId] = useState();\n  const [contractABI, setContractABI] = useState('[{\"anonymous\": false, \"inputs\": [{\"indexed\": true, \"internalType\": \"bytes32\", \"name\": \"categoryId\", \"type\": \"bytes32\"}, {\"indexed\": false, \"internalType\": \"string\", \"name\": \"category\", \"type\": \"string\"}], \"name\": \"CategoryCreated\", \"type\": \"event\"}, {\"anonymous\": false, \"inputs\": [{\"indexed\": true, \"internalType\": \"bytes32\", \"name\": \"contentId\", \"type\": \"bytes32\"}, {\"indexed\": false, \"internalType\": \"string\", \"name\": \"contentUri\", \"type\": \"string\"}], \"name\": \"ContentAdded\", \"type\": \"event\"}, {\"anonymous\": false, \"inputs\": [{\"indexed\": true, \"internalType\": \"bytes32\", \"name\": \"postId\", \"type\": \"bytes32\"}, {\"indexed\": true, \"internalType\": \"address\", \"name\": \"postOwner\", \"type\": \"address\"}, {\"indexed\": true, \"internalType\": \"bytes32\", \"name\": \"parentId\", \"type\": \"bytes32\"}, {\"indexed\": false, \"internalType\": \"bytes32\", \"name\": \"contentId\", \"type\": \"bytes32\"}, {\"indexed\": false, \"internalType\": \"bytes32\", \"name\": \"categoryId\", \"type\": \"bytes32\"}], \"name\": \"PostCreated\", \"type\": \"event\"}, {\"anonymous\": false, \"inputs\": [{\"indexed\": true, \"internalType\": \"bytes32\", \"name\": \"postId\", \"type\": \"bytes32\"}, {\"indexed\": true, \"internalType\": \"address\", \"name\": \"postOwner\", \"type\": \"address\"}, {\"indexed\": true, \"internalType\": \"address\", \"name\": \"voter\", \"type\": \"address\"}, {\"indexed\": false, \"internalType\": \"uint80\", \"name\": \"reputationPostOwner\", \"type\": \"uint80\"}, {\"indexed\": false, \"internalType\": \"uint80\", \"name\": \"reputationVoter\", \"type\": \"uint80\"}, {\"indexed\": false, \"internalType\": \"int40\", \"name\": \"postVotes\", \"type\": \"int40\"}, {\"indexed\": false, \"internalType\": \"bool\", \"name\": \"up\", \"type\": \"bool\"}, {\"indexed\": false, \"internalType\": \"uint8\", \"name\": \"reputationAmount\", \"type\": \"uint8\"}], \"name\": \"Voted\", \"type\": \"event\"}, {\"inputs\": [{\"internalType\": \"string\", \"name\": \"_category\", \"type\": \"string\"}], \"name\": \"addCategory\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\"}, {\"inputs\": [{\"internalType\": \"bytes32\", \"name\": \"_parentId\", \"type\": \"bytes32\"}, {\"internalType\": \"string\", \"name\": \"_contentUri\", \"type\": \"string\"}, {\"internalType\": \"bytes32\", \"name\": \"_categoryId\", \"type\": \"bytes32\"}], \"name\": \"createPost\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\"}, {\"inputs\": [{\"internalType\": \"bytes32\", \"name\": \"_categoryId\", \"type\": \"bytes32\"}], \"name\": \"getCategory\", \"outputs\": [{\"internalType\": \"string\", \"name\": \"\", \"type\": \"string\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [{\"internalType\": \"bytes32\", \"name\": \"_contentId\", \"type\": \"bytes32\"}], \"name\": \"getContent\", \"outputs\": [{\"internalType\": \"string\", \"name\": \"\", \"type\": \"string\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [{\"internalType\": \"bytes32\", \"name\": \"_postId\", \"type\": \"bytes32\"}], \"name\": \"getPost\", \"outputs\": [{\"internalType\": \"address\", \"name\": \"\", \"type\": \"address\"}, {\"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\"}, {\"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\"}, {\"internalType\": \"int72\", \"name\": \"\", \"type\": \"int72\"}, {\"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [{\"internalType\": \"address\", \"name\": \"_address\", \"type\": \"address\"}, {\"internalType\": \"bytes32\", \"name\": \"_categoryID\", \"type\": \"bytes32\"}], \"name\": \"getReputation\", \"outputs\": [{\"internalType\": \"uint80\", \"name\": \"\", \"type\": \"uint80\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [{\"internalType\": \"bytes32\", \"name\": \"_postId\", \"type\": \"bytes32\"}, {\"internalType\": \"uint8\", \"name\": \"_reputationTaken\", \"type\": \"uint8\"}], \"name\": \"voteDown\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\"}, {\"inputs\": [{\"internalType\": \"bytes32\", \"name\": \"_postId\", \"type\": \"bytes32\"}, {\"internalType\": \"uint8\", \"name\": \"_reputationAdded\", \"type\": \"uint8\"}], \"name\": \"voteUp\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\"}]');\n  const [contractAddress, setContractAddress] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState({\"categoryId\":\"0x91\",\"category\":\"default\"});\n  \n\n\n  useEffect(() => {\n    Moralis.onChainChanged(function (chain) {\n      setChainId(chain);\n    });\n\n    Moralis.onAccountsChanged(function (address) {\n      setWalletAddress(address[0]);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => setChainId(web3.givenProvider?.chainId));\n  useEffect(\n    () => setWalletAddress(web3.givenProvider?.selectedAddress || user?.get(\"ethAddress\")),\n    [web3, user]\n  );\n\n  return (\n    <MoralisDappContext.Provider value={{ walletAddress, chainId, selectedCategory, setSelectedCategory, contractABI, setContractABI, contractAddress, setContractAddress }}>\n      {children}\n    </MoralisDappContext.Provider>\n  );\n}\n\nfunction useMoralisDapp() {\n  const context = React.useContext(MoralisDappContext);\n  if (context === undefined) {\n    throw new Error(\"useMoralisDapp must be used within a MoralisDappProvider\");\n  }\n  return context;\n}\n\nexport { MoralisDappProvider, useMoralisDapp };\n","export const n6 = new Intl.NumberFormat(\"en-us\", {\n  style: \"decimal\",\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 6,\n});\nexport const n4 = new Intl.NumberFormat(\"en-us\", {\n  style: \"decimal\",\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 4,\n});\n\nexport const c2 = new Intl.NumberFormat(\"en-us\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\n/**\n * Returns a string of form \"abc...xyz\"\n * @param {string} str string to string\n * @param {number} n number of chars to keep at front/end\n * @returns {string}\n */\nexport const getEllipsisTxt = (str, n = 6) => {\n  if (str) {\n    return `${str.substr(0, n)}...${str.substr(str.length - n, str.length)}`;\n  }\n  return \"\";\n};\n\nexport const tokenValue = (value, decimals) => (decimals ? value / Math.pow(10, decimals) : value);\n\n/**\n * Return a formatted string with the symbol at the end\n * @param {number} value integer value\n * @param {number} decimals number of decimals\n * @param {string} symbol token symbol\n * @returns {string}\n */\nexport const tokenValueTxt = (value, decimals, symbol) => `${n4.format(tokenValue(value, decimals))} ${symbol}`;\n","import Blockies from \"react-blockies\";\nimport { useMoralisDapp } from \"../providers/MoralisDappProvider/MoralisDappProvider\";\n\n/**\n * Shows a blockie image for the provided wallet address\n * @param {*} props\n * @returns <Blockies> JSX Elemenet\n */\n\nfunction Blockie(props) {\n  const { walletAddress } = useMoralisDapp();\n  if ((!props.address && !props.currentWallet) || !walletAddress) return null;\n\n  return (\n    <Blockies\n      seed={props.currentWallet ? walletAddress.toLowerCase() : props.address.toLowerCase()}\n      className=\"identicon\"\n      {...props}\n    />\n  );\n}\n\nexport default Blockie;\n","import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useMoralisDapp } from \"../../providers/MoralisDappProvider/MoralisDappProvider\";\nimport { getEllipsisTxt } from \"../../helpers/formatters\";\nimport Blockie from \"../Blockie\";\nimport \"./identicon.css\";\n\nconst styles = {\n  address: {\n    height: \"36px\",\n    display: \"flex\",\n    gap: \"5px\",\n    backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n    borderRadius: \"9px\",\n    alignItems: \"center\",\n  },\n};\n\nfunction Address(props) {\n  const { walletAddress } = useMoralisDapp();\n  const [address, setAddress] = useState();\n  const [isClicked, setIsClicked] = useState(false);\n\n  useEffect(() => {\n    setAddress(props?.address || walletAddress);\n  }, [walletAddress, props]);\n\n  if (!address) return null;\n\n  const Copy = () => (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"26\"\n      height=\"26\"\n      viewBox=\"0 0 24 24\"\n      strokeWidth=\"2\"\n      stroke=\"#1780FF\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      style={{ cursor: \"pointer\" }}\n      onClick={() => {\n        navigator.clipboard.writeText(address);\n        setIsClicked(true);\n      }}\n    >\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M15 3v4a1 1 0 0 0 1 1h4\" />\n      <path d=\"M18 17h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h4l5 5v7a2 2 0 0 1 -2 2z\" />\n      <path d=\"M16 17v2a2 2 0 0 1 -2 2h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2\" />\n      <title id=\"copy-address\">Copy Address</title>\n    </svg>\n  );\n\n  return (\n    <div style={{ ...styles.address, ...props.style }}>\n      {props.avatar === \"left\" && <Blockie address={address} size={7} />}\n      <p>{props.size ? getEllipsisTxt(address, props.size) : address}</p>\n      {props.avatar === \"right\" && <Blockie address={address} size={7} />}\n      {props.copyable && (isClicked ? <Check /> : <Copy />)}\n    </div>\n  );\n}\n\nexport default Address;\n\nconst Check = () => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    strokeWidth=\"3\"\n    stroke=\"#21BF96\"\n    fill=\"none\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M5 12l5 5l10 -10\" />\n    <title id=\"copied-address\">Copied!</title>\n  </svg>\n);\n","export const networkConfigs = {\n  \"0x1\": {\n    currencySymbol: \"ETH\",\n    blockExplorerUrl: \"https://etherscan.io/\",\n    wrapped: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n  },\n  \"0x3\": {\n    currencySymbol: \"ETH\",\n    blockExplorerUrl: \"https://ropsten.etherscan.io/\",\n  },\n  \"0x4\": {\n    currencySymbol: \"ETH\",\n    blockExplorerUrl: \"https://kovan.etherscan.io/\",\n  },\n  \"0x2a\": {\n    currencySymbol: \"ETH\",\n    blockExplorerUrl: \"https://rinkeby.etherscan.io/\",\n  },\n  \"0x5\": {\n    currencySymbol: \"ETH\",\n    blockExplorerUrl: \"https://goerli.etherscan.io/\",\n  },\n  \"0x539\": {\n    chainName: \"Local Chain\",\n    currencyName: \"ETH\",\n    currencySymbol: \"ETH\",\n    rpcUrl: \"http://127.0.0.1:7545\",\n  },\n  \"0xa86a\": {\n    chainId: 43114,\n    chainName: \"Avalanche Mainnet\",\n    currencyName: \"AVAX\",\n    currencySymbol: \"AVAX\",\n    rpcUrl: \"https://api.avax.network/ext/bc/C/rpc\",\n    blockExplorerUrl: \"https://cchain.explorer.avax.network/\",\n  },\n  \"0x38\": {\n    chainId: 56,\n    chainName: \"Smart Chain\",\n    currencyName: \"BNB\",\n    currencySymbol: \"BNB\",\n    rpcUrl: \"https://bsc-dataseed.binance.org/\",\n    blockExplorerUrl: \"https://bscscan.com/\",\n    wrapped: \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\",\n  },\n  \"0x61\": {\n    chainId: 97,\n    chainName: \"Smart Chain - Testnet\",\n    currencyName: \"BNB\",\n    currencySymbol: \"BNB\",\n    rpcUrl: \"https://data-seed-prebsc-1-s1.binance.org:8545/\",\n    blockExplorerUrl: \"https://testnet.bscscan.com/\",\n  },\n  \"0x89\": {\n    chainId: 137,\n    chainName: \"Polygon Mainnet\",\n    currencyName: \"MATIC\",\n    currencySymbol: \"MATIC\",\n    rpcUrl: \"https://rpc-mainnet.maticvigil.com/\",\n    blockExplorerUrl: \"https://explorer-mainnet.maticvigil.com/\",\n    wrapped: \"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270\",\n  },\n  \"0x13881\": {\n    chainId: 80001,\n    chainName: \"Mumbai\",\n    currencyName: \"MATIC\",\n    currencySymbol: \"MATIC\",\n    rpcUrl: \"https://rpc-mumbai.matic.today/\",\n    blockExplorerUrl: \"https://mumbai.polygonscan.com/\",\n  },\n};\n\nexport const getNativeByChain = (chain) =>\n  networkConfigs[chain]?.currencySymbol || \"NATIVE\";\n\nexport const getChainById = (chain) => networkConfigs[chain]?.chainId || null;\n\nexport const getExplorer = (chain) => networkConfigs[chain]?.blockExplorerUrl;\n\nexport const getWrappedNative = (chain) =>\n  networkConfigs[chain]?.wrapped || null;\n","import { useMoralisDapp } from \"providers/MoralisDappProvider/MoralisDappProvider\";\nimport { useMoralis } from \"react-moralis\";\nimport { getEllipsisTxt } from \"helpers/formatters\";\nimport Blockie from \"./Blockie\";\nimport { Button, Card, Modal } from \"antd\";\nimport { useState } from \"react\";\nimport Address from \"./Address/Address\";\nimport { SelectOutlined } from \"@ant-design/icons\";\nimport { getExplorer } from \"helpers/networks\";\nconst styles = {\n  account: {\n    height: \"42px\",\n    padding: \"0 15px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"fit-content\",\n    borderRadius: \"12px\",\n    backgroundColor: \"rgb(244, 244, 244)\",\n    cursor: \"pointer\",\n  },\n  text: {\n    color: \"#21BF96\",\n  },\n};\n\nfunction Account() {\n  const { authenticate, isAuthenticated, logout } = useMoralis();\n  const { walletAddress, chainId } = useMoralisDapp();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  if (!isAuthenticated) {\n    return (\n      <div\n        style={styles.account}\n        onClick={() => authenticate({ signingMessage: \"Hello World!\" })}\n      >\n        <p style={styles.text}>Authenticate</p>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div style={styles.account} onClick={() => setIsModalVisible(true)}>\n        <p style={{ marginRight: \"5px\", ...styles.text }}>\n          {getEllipsisTxt(walletAddress, 6)}\n        </p>\n        <Blockie currentWallet scale={3} />\n      </div>\n      <Modal\n        visible={isModalVisible}\n        footer={null}\n        onCancel={() => setIsModalVisible(false)}\n        bodyStyle={{\n          padding: \"15px\",\n          fontSize: \"17px\",\n          fontWeight: \"500\",\n        }}\n        style={{ fontSize: \"16px\", fontWeight: \"500\" }}\n        width=\"400px\"\n      >\n        Account\n        <Card\n          style={{\n            marginTop: \"10px\",\n            borderRadius: \"1rem\",\n          }}\n          bodyStyle={{ padding: \"15px\" }}\n        >\n          <Address\n            avatar=\"left\"\n            size={6}\n            copyable\n            style={{ fontSize: \"20px\" }}\n          />\n          <div style={{ marginTop: \"10px\", padding: \"0 10px\" }}>\n            <a\n              href={`${getExplorer(chainId)}/address/${walletAddress}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <SelectOutlined style={{ marginRight: \"5px\" }} />\n              View on Explorer\n            </a>\n          </div>\n        </Card>\n        <Button\n          size=\"large\"\n          type=\"primary\"\n          style={{\n            width: \"100%\",\n            marginTop: \"10px\",\n            borderRadius: \"0.5rem\",\n            fontSize: \"16px\",\n            fontWeight: \"500\",\n          }}\n          onClick={() => {\n            logout();\n            setIsModalVisible(false);\n          }}\n        >\n          Disconnect Wallet\n        </Button>\n      </Modal>\n    </>\n  );\n}\n\nexport default Account;\n","import React, { useState, useEffect } from \"react\";\r\nimport './Poll.css';\r\n\r\nconst Poll = ({question, answers, onVote, voted, voteReady}) => {\r\n  const [totalVotes, setTotalVotes] = useState(0)\r\n  useEffect(() => {\r\n    const _totalVotes = answers?.reduce((total, current) => (total+parseInt(current.votes)), 0)\r\n    console.log('totalVotes: ', _totalVotes)\r\n    setTotalVotes(_totalVotes)\r\n  }, [answers])\r\n  const renderAnswers = () => {\r\n    return (\r\n      <ul className='poll-answers'>\r\n        {answers?.map(answer => (\r\n          <li key={answer?.option} style={{width: '100%', margin: '5px 0'}}>\r\n            <button className=\"option\" onClick={() => onVote(answer?.option)}>{answer?.option}</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  const renderStatus = () => {\r\n    return (\r\n      <ul className='poll-answers'>\r\n        {answers?.map(answer => (\r\n          <li key={answer?.option} style={{width: '100%', margin: '5px 0'}}>\r\n            <div className=\"answer-status\">\r\n              {voted==answer?.option && <div className=\"answer-fill\"></div>}\r\n              <div className=\"answer-labels\">\r\n                <span style={{color: 'rgb(48, 48, 48)'}}>{answer?.votes*100/totalVotes}%</span>\r\n                <span className={voted==answer?.option ? \"answer vote\" : \"answer\"}>{answer?.option}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <article style={{padding: '10px'}}>\r\n      <h3 className=\"header\">{question}</h3>\r\n      {voted ? renderStatus() : renderAnswers()}\r\n      <p className=\"votes\">{totalVotes} votes</p>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default Poll;","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  useMoralis,\n  useNativeBalance,\n  useNewMoralisObject,\n} from \"react-moralis\";\nimport Poll from './Poll.jsx';\n\nlet saved_account = \"\";\n\n// WARNING: DEMO CODE/WIP\n// TODO: Need to display/build Polls data from Moralis instance.\n// TODO: utilise further  calls such as …\n// 'const { switchNetwork, chainId, chain, account } = useChain();'\n\n// Declaring poll question and answers\n// Currenltly static, exisiting example of objectId in Moralis instance's db.\n\nconst pollQuestion = \"Youtube is the best place to learn ?\";\nconst answers = [\n  { option: \"Yes\", votes: 0 },\n  { option: \"No\", votes: 0 },\n  { option: \"don't know\", votes: 0 },\n];\nlet option_voted = \"\";\nlet poll_id = 1;\nlet voter = {};\nlet poll_title = \"\";\nlet poll_options = [];\nlet votes = {};\n\nfunction Polls({ more }) {\n  const [access, setReg] = useState(false);\n  const [voted, setVoted] = useState(false);\n  const { isInitialized, account, isAuthenticated, Moralis } = useMoralis();\n\n  const {\n    getBalance,\n    data: balance,\n    nativeToken,\n    isLoading,\n  } = useNativeBalance({ chain: \"mumbai\" });\n  const { isSaving, error, save, object } = useNewMoralisObject(\"Polls\");\n\n  // Setting answers to state to reload the component with each vote\n  const [pollAnswers, setPollAnswers] = useState([...answers]);\n  const isInitialMount = useRef(true);\n\n  const updatePoll = async () => {\n    const PollData = Moralis.Object.extend(\"Polls\");\n    const query = new Moralis.Query(PollData);\n    // Building Poll from Moralis instance will include: 'query.equalTo(\"id\", 1);'\n    query.equalTo(\"pollID\", 1); //<-- temp/static id to update same row, instead of saving new row\n    const poll = await query.first();\n    const pAnswers = poll?.attributes.options;\n    console.log('poll: ', pAnswers || answers)\n    setPollAnswers(pAnswers || answers)\n    const _voted = poll?.attributes.voted[account]\n    console.log(\"_voted: \", poll, _voted, account)\n    setVoted(_voted)\n    votes = poll?.attributes.voted;\n\n    return poll;\n  };\n\n  // check reg status -> handle\n  const checkReg = async (_access) => {\n    if (!isAuthenticated) {\n      // not authenticated user\n      return false;\n    } else {\n      // access condition\n      _access = balance.balance && balance.balance > 0 ? true : false;\n      if (_access) {\n        // reset/build options\n        option_voted = \"\";\n        voter = account;\n        poll_title = pollQuestion;\n        poll_options = answers;\n        updatePoll();\n        // give access to vote if meets conditions\n        setReg(_access);\n        saved_account = account;\n      } else {\n        // no access\n      }\n\n      return _access;\n    }\n  };\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      // run on update\n      if (isInitialized && balance.balance > 0) {\n        if (saved_account !== account) {\n          // check registration status\n          checkReg();\n        }\n      } else {\n        // reset registration status to false\n        setReg(false);\n      }\n    }\n  }, [account, balance, isInitialized]);\n\n  const handleVote = async (voteAnswer) => {\n    option_voted = voteAnswer;\n\n    const asyncVoteRes = pollAnswers.map((answer) => {\n        if (answer.option === option_voted) {\n          answer.votes = answer.votes + 1;\n        }\n        return answer;\n      });\n\n    console.log(\"Async\", asyncVoteRes);\n    poll_options = asyncVoteRes;\n\n    // Poll Class Design\n    // columns: poll_id: uint, poll_options: [{option: \"Yes\", votes: 7}, {option: \"No\", votes: 2}], poll_voters: {user_id}\n\n    // test db integration with static example\n    // create poll\n    //\n    let poll_data = {\n      id: poll_id,\n      title: poll_title,\n      options: poll_options,\n      voted: {...votes, [voter]: voteAnswer},\n    };\n\n    const PollData = Moralis.Object.extend(\"Polls\");\n    const query = new Moralis.Query(PollData);\n    // Building Poll from Moralis instance will include: 'query.equalTo(\"id\", 1);'\n    // query.equalTo(\"pollID\", 1); //<-- temp/static id to update same row, instead of saving new row\n    let poll = await query.first();\n    if (!poll) poll = new Moralis.Object(\"Polls\");\n    poll.set(\"pollID\", poll_data.id);\n    poll.set(\"title\", poll_data.title);\n    poll.set(\"options\", poll_data.options);\n    poll.set(\"voted\", poll_data.voted);\n    poll.save();\n    setPollAnswers(poll_options)\n    setVoted(voteAnswer)\n  };\n\n  // Not authoriased\n  if (!access) {\n    return <>{\"NO ACCESS\"}</>;\n  }\n\n  // Authoriased\n  return (\n    <>\n      <Poll\n        question={pollQuestion}\n        answers={pollAnswers}\n        onVote={handleVote}\n        voted = {voted}\n      />\n    </>\n  );\n}\n\nexport default Polls;\n","import { useMoralisQuery } from \"react-moralis\";\n/* import Categories from \"./Categories\"\nimport Feed from \"./Feed\" */\nimport Polls from \"./Polls\";\n\nconst Main = () => {\n  const queryCategories = useMoralisQuery(\"Categories\");\n  const fetchedCategories = JSON.parse(\n    JSON.stringify(queryCategories.data, [\"categoryId\", \"category\"])\n  );\n\n  console.log(fetchedCategories);\n  return (\n    <div className=\"container\">\n      <div\n        style={{\n          display: \"flex\",\n          fontFamily: \"Roboto, sans-serif\",\n          color: \"#041836\",\n          padding: \"10px 30px\",\n          maxWidth: \"1200px\",\n          width: \"100%\",\n          gap: \"20px\",\n        }}\n      >\n        {/* Inserted Poll 'component/Poll.js' */}\n        <Polls />\n        {/* Temporarily just commented-out */}\n        {/* <Categories categories={fetchedCategories}/>\n          <Feed/> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import { useEffect } from \"react\";\nimport { useMoralis } from \"react-moralis\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n  Route\n} from \"react-router-dom\";\nimport Account from \"components/Account\";\nimport { Layout} from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./style.css\";\nimport Main from \"components/Main\"\nconst { Header} = Layout;\n\nconst styles = {\n  content: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    fontFamily: \"Roboto, sans-serif\",\n    color: \"#041836\",\n    marginTop: \"130px\",\n    padding: \"10px\",\n  },\n  header: {\n    position: \"fixed\",\n    zIndex: 1,\n    width: \"100%\",\n    background: \"#fff\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    fontFamily: \"Roboto, sans-serif\",\n    borderBottom: \"2px solid rgba(0, 0, 0, 0.06)\",\n    padding: \"0 10px\",\n    boxShadow: \"0 1px 10px rgb(151 164 175 / 10%)\",\n  },\n  headerRight: {\n    display: \"flex\",\n    gap: \"20px\",\n    alignItems: \"center\",\n    fontSize: \"15px\",\n    fontWeight: \"600\",\n  },\n};\nconst App = ({ isServerInfo }) => {\n  const { isWeb3Enabled, enableWeb3, isAuthenticated, isWeb3EnableLoading } =\n    useMoralis();\n\n  useEffect(() => {\n    if (isAuthenticated && !isWeb3Enabled && !isWeb3EnableLoading) enableWeb3();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isAuthenticated, isWeb3Enabled]);\n\n  return (\n    <Layout style={{ height: \"100vh\", overflow: \"auto\" }}>\n      <Router>\n        <Header style={styles.header}>\n          <Logo />\n          <div style={styles.headerRight}>\n            <Account />\n          </div>\n        </Header>\n        <div style={styles.content}>\n          <Switch>\n            <Route path=\"/main\">\n                <Main/>\n            </Route>\n            <Route path=\"/nonauthenticated\">\n              <h3>Please login using the \"Authenticate\" button</h3>\n            </Route>\n          </Switch>\n          {isAuthenticated ? <Redirect to=\"/main\" /> : <Redirect to=\"/nonauthenticated\" />}\n        </div>\n      </Router>\n    </Layout>\n  );\n};\n\nexport const Logo = () => <h4>Decentradit</h4>\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { MoralisProvider } from \"react-moralis\";\nimport \"./index.css\";\nimport { MoralisDappProvider } from \"./providers/MoralisDappProvider/MoralisDappProvider\";\n\n/** Get your free Moralis Account https://moralis.io/ */\n\nconst APP_ID = process.env.REACT_APP_MORALIS_APPLICATION_ID;\nconst SERVER_URL = process.env.REACT_APP_MORALIS_SERVER_URL;\n\nconst Application = () => {\n  const isServerInfo = APP_ID && SERVER_URL ? true : false;\n  if (isServerInfo)\n    return (\n      <MoralisProvider appId={APP_ID} serverUrl={SERVER_URL}>\n        <MoralisDappProvider>\n          <App isServerInfo />\n        </MoralisDappProvider>\n      </MoralisProvider>\n    );\n};\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Application />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}